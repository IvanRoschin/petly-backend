{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Petly API Docs",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": [
    "application/json",
    "multipart/form-data",
    "image/png",
    "image/jpg",
    "image/gif",
    "image/web"
  ],
  "produces": [
    "application/json",
    "multipart/form-data",
    "image/png",
    "image/jpg",
    "image/gif",
    "image/web"
  ],
  "servers": [
    { "url": "http://localhost:3030", "description": "Local" },
    {
      "url": "https://uninterested-hose-newt.cyclic.app",
      "description": "Main"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Everything about user authentication"
    },
    {
      "name": "Our Friends",
      "description": "Our Friends endpoints"
    },
    {
      "name": "News",
      "description": "News endpoints"
    },
    {
      "name": "Notices",
      "description": "Notices endpoints"
    },
    {
      "name": "Pets",
      "description": "Pets endpoints"
    },
    {
      "name": "Cities",
      "description": "Cities endpoints"
    }
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",

        "parameters": [],

        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "409": { "description": "Email or phone in use" },
          "500": { "description": "Server error" }
        }
      }
    },

    "/api/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User login",

        "parameters": [],

        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Email or password is wrong"
          },
          "500": { "description": "Server error" }
        }
      }
    },

    "/api/users/refresh": {
      "post": {
        "tags": ["Users"],
        "summary": "Refresh user token",
        "parameters": [],
        "requestBody": {
          "description": "Refresh token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MWQ5NTYwY2FmNDU2N2FhMTNlNmRmNyIsImlhdCI6MTY3OTY2MDcxMywiZXhwIjoxNjgwMjY1NTEzfQ.d045FdD9sHXq3JeEX-gS9PTAywIGtA67Cr_33qmylLw"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZGE1MmY1MGJiMTVlOTM1NWRiMTMxYSIsImlhdCI6MTY3NTM3MTE2MSwiZXhwIjoxNjc1MzcyMDYxfQ.hesoLS6Xr6LZfjgpo-otp8eZCgCLoLKMWRYpojZ6cKE"
                    },
                    "refreshToken": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZGE1MmY1MGJiMTVlOTM1NWRiMTMxYSIsImlhdCI6MTY3NTM3MTE2MSwiZXhwIjoxNjc1MzcyMDYxfQ.hesoLS6Xr6LZfjgpo-otp8eZCgCLoLKMWRYpojZ6cKE"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Token invalid"
          },
          "500": { "description": "Server error" }
        }
      }
    },

    "/api/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get information about the current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserInfoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },

    "/api/users/logout": {
      "get": {
        "tags": ["Users"],
        "summary": "Log out user",

        "parameters": [],

        "security": [{ "Bearer": [] }],

        "responses": {
          "204": {
            "description": "Logout success"
          },
          "401": {
            "description": "Missing header with authorization token"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },

    "/api/users/edit": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update information about the current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserInfoRequest"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserInfoRequest"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },

    "/api/users/avatars": {
      "put": {
        "tags": ["Users"],
        "summary": "Update user's avatar",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CurrentUserUpdateAvatarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserUpdateAvatarRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },

    "/api/friends": {
      "get": {
        "tags": ["Our Friends"],
        "summary": "Obtaining contact information about services that provide services",
        "consumes": "multipart/form-data",

        "parameters": [],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFriendsRequest"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },

    "/api/news": {
      "get": {
        "tags": ["News"],
        "summary": "Receiving news",

        "parameters": [],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNewsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },

    "/api/notices": {
      "post": {
        "tags": ["Notices"],
        "summary": "Adding notice according to the selected category",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Notice object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/NewNoticeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "successfully created"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": ["Notices"],
        "summary": "Receiving ads of an authorized user created by the same user",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesListschema"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },

    "/api/notices/category/{category}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Search notice in category",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "description": "Category Name",
            "schema": {
              "type": "string",
              "example": "sell"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search query",
            "schema": {
              "type": "string",
              "example": "Прод"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page pagination",
            "type": "integer"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesListschema"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },

    "/api/notices/id/{id}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get one notice by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Notice id",
            "schema": {
              "type": "string",
              "example": "6418cb61dea99f728afd5b48"
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticeSchema"
                }
              }
            }
          },
          "404": {
            "description": "Notice not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": ["Notices"],
        "summary": "Deleting an ad of an authorized user",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Notice id",
            "schema": {
              "type": "string",
              "example": "6418cb61dea99f728afd5b48"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "description": "Notice id",
                      "example": "6418cb61dea99f728afd5b48"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Notice not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },

    "/api/notices/favorite": {
      "get": {
        "tags": ["Notices"],
        "summary": "Receiving notices of the authorized user added by him to the favorites",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteNoticeListSchema"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },

    "/api/notices/favorite/{id}": {
      "post": {
        "tags": ["Notices"],
        "summary": "Adding an authorized user's notice to favorites",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Notice id",
            "schema": {
              "type": "string",
              "example": "6419adf2fdacd0bab0258b92"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteNoticeSchema"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      },

      "delete": {
        "tags": ["Notices"],
        "summary": "Deletion of the ad of the authorized user added to the favorites",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Notice id",
            "schema": {
              "type": "string",
              "example": "6419adf2fdacd0bab0258b92"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "description": "Notice id",
                      "example": "6418cb61dea99f728afd5b48"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Notice not found"
          },
          "409": {
            "description": "Notice with id: {id} not in favorites"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },

    "/api/pets": {
      "post": {
        "tags": ["Pets"],
        "summary": "Add animal card",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Pets object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PetRequestSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },

    "/api/pets/{petId}": {
      "delete": {
        "tags": ["Pets"],
        "summary": "Removing the animal card",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "petId",
            "required": true,
            "type": "string",
            "description": "Pet's id",
            "schema": {
              "type": "string",
              "example": "6419adf2fdacd0bab0258b92"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetResponseSchema"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Pet with id not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },

    "/api/cities": {
      "get": {
        "tags": ["Cities"],
        "summary": "Add city name and location in Register form",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "City Name in search query",
            "schema": {
              "type": "string",
              "example": "Бро"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cityName": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "SignupRequest": {
        "type": "object",
        "required": ["email", "password", "name", "city", "phone"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "usertest@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "QWerty123"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User Test"
          },
          "city": {
            "type": "string",
            "description": "User's city and region",
            "example": "Brovary, Kyiv"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380981112233"
          }
        }
      },

      "SignupResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "User Test"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "example": "usertest@gmail.com"
            },
            "token": {
              "type": "string",
              "description": "token",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZGE1MmY1MGJiMTVlOTM1NWRiMTMxYSIsImlhdCI6MTY3NTM3MTE2MSwiZXhwIjoxNjc1MzcyMDYxfQ.hesoLS6Xr6LZfjgpo-otp8eZCgCLoLKMWRYpojZ6cKE"
            },
            "refreshToken": {
              "type": "string",
              "description": "refreshToken",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZGE1MmY1MGJiMTVlOTM1NWRiMTMxYSIsImlhdCI6MTY3NTM3MTE2MSwiZXhwIjoxNjc1MzcyMDYxfQ.hesoLS6Xr6LZfjgpo-otp8eZCgCLoLKMWRYpojZ6cKE"
            }
          }
        },
        "example": {
          "name": "User Test",
          "email": "usertest@gmail.com",
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZGE1MmY1MTMxYSIsImlhdCI6MTY3NTM3MTE2MSwiZXhwIjoxNjc1MzcyMDYxfQ.hesoLS6Xr6LZfjgpo-otp8eZCgCLoLKMWRYpojZ6cKE",
          "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZGE1MmY1MTMxYSIsImlhdCI6MTY3NTM3MTE2MSwiZXhwIjoxNjc1MzcyMDYxfQ.hesoLS6Xr6LZfjgpo-otp8eZCgCLoLKMWRYpojZ6cKE"
        }
      },

      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "usertest@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "QWerty123"
          }
        }
      },

      "LoginResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "accessToken": {
              "type": "string",
              "description": "accessToken",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MWQ5NmZkMjFhOTE4MjNiY2NkYzYzYiIsImlhdCI6MTY3OTY4NjA4NSwiZXhwIjoxNjc5ODU4ODg1fQ.U-cK6jUuCnRJ9xzb2sV8sWDmRRAcqKAOYg6AJjc-ia0"
            },
            "refreshToken": {
              "type": "string",
              "description": "refreshToken",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MWQ5NmZkMjFhOTE4MjNiY2NkYzYzYiIsImlhdCI6MTY3OTY4NjA4NSwiZXhwIjoxNjgwMjkwODg1fQ.27gonetSCtebvuz0dgfYvgifZbOtRQlih3ix6wR7O3w"
            }
          }
        },
        "example": {
          "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MWQ5NmZkMjFhOTE4MjNiY2NkYzYzYiIsImlhdCI6MTY3OTY4NjA4NSwiZXhwIjoxNjc5ODU4ODg1fQ.U-cK6jUuCnRJ9xzb2sV8sWDmRRAcqKAOYg6AJjc-ia0",
          "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MWQ5NmZkMjFhOTE4MjNiY2NkYzYzYiIsImlhdCI6MTY3OTY4NjA4NSwiZXhwIjoxNjgwMjkwODg1fQ.27gonetSCtebvuz0dgfYvgifZbOtRQlih3ix6wR7O3w"
        }
      },

      "GetUserInfoRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "usertest@gmail.com"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User Test"
          },
          "city": {
            "type": "string",
            "description": "User's city and region",
            "example": "Brovary, Kyiv"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380981112233"
          },
          "birthDate": {
            "type": "string",
            "format": "dateTime",
            "description": "Users's birthday",
            "example": "2023-03-21T13:15:30.063Z"
          },
          "avatarURL": {
            "type": "string",
            "description": "avatar URL"
          }
        }
      },

      "UpdateUserInfoRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "New user's email",
            "example": "usertest@gmail.com"
          },
          "name": {
            "type": "string",
            "description": "New user's name",
            "example": "new User Test"
          },
          "city": {
            "type": "string",
            "description": "New user's city and region",
            "example": "Brovary, Kyiv"
          },
          "phone": {
            "type": "string",
            "description": "New user's phone",
            "example": "+380981112233"
          },
          "birthDate": {
            "type": "string",
            "format": "dateTime",
            "description": "User's new date birthday",
            "example": "2023-03-21T13:15:30.063Z"
          }
        }
      },

      "GetUserInfoResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User Test"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "usertest@gmail.com"
          },

          "city": {
            "type": "string",
            "description": "User's city and region",
            "example": "Brovary, Kyiv"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380981112233"
          },
          "birthDate": {
            "type": "string",
            "format": "dateTime",
            "description": "Users's birthday",
            "example": "2023-03-21T13:15:30.063Z"
          },
          "avatarURL": {
            "type": "string",
            "format": "binary",
            "description": "avatar URL"
          },
          "myPets": {
            "type": "array",
            "description": "New registered User's myPent's array is empty"
          },
          "favorite": {
            "type": "array",
            "description": "New registered User's favorite array is empty"
          }
        },
        "example": {
          "category": "sell",
          "title": "Sell a cat",
          "name": "Tom",
          "birthDate": "2023-03-21T13:15:30.063Z",
          "breed": "British Shorthair",
          "sex": "male",
          "location": "Brovary, Kyiv",
          "price": 500,
          "photoURL": "https://res.cloudinary.com/dpjmbj5vx/image/upload/v1679256350/noticeImages/licensed-image.jpg",
          "comments": "Lorem ipsum dolor sit amet, consecteturLorem ipsum dolor sit amet"
        }
      },

      "CurrentUserUpdateAvatarRequest": {
        "type": "object",
        "required": ["avatarURL"],
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "New Avatar image",
            "format": "binary"
          }
        },
        "example": {
          "avatarURL": "https://res.cloudinary.com/dpjmbj5vx/image/upload/v1679256350/noticeImages/licensed-image.jpg"
        }
      },

      "GetFriendsRequest": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "addressUrl": {
              "type": "string"
            },
            "imageUrl": {
              "type": "string"
            },
            "address": {
              "type": "string"
            },
            "workDays": {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            "phone": {
              "type": "string"
            },
            "email": {
              "type": "string"
            }
          }
        }
      },

      "GetNewsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "date": {
              "type": "string"
            }
          }
        }
      },

      "NewNoticeRequest": {
        "type": "object",
        "required": [
          "category",
          "title",
          "sex",
          "location",
          "photoURL",
          "comments"
        ],
        "properties": {
          "category": {
            "type": "string",
            "description": "Notice category must be one of: [sell/for-free/lost-found]",
            "example": "for-free"
          },
          "title": {
            "type": "string",
            "description": "Notice title",
            "example": "Sell kat"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Tom"
          },
          "birthDate": {
            "type": "string",
            "format": "dateTime",
            "description": "Pet's birthday",
            "example": "2023-03-21T13:15:30.063Z"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "British Shorthair"
          },
          "sex": {
            "type": "string",
            "description": "Pet's sex must be male or female",
            "example": "male"
          },
          "location": {
            "type": "string",
            "description": "Pet's location",
            "example": "Brovary, Kyiv"
          },
          "price": {
            "type": "integer",
            "description": "Pet's price",
            "example": "200"
          },
          "photoURL": {
            "type": "string",
            "description": "Pet's photo",
            "format": "binary"
          },
          "comments": {
            "type": "string",
            "description": "Some text about Pet",
            "example": "Lorem ipsum dolor sit amet, consecteturLorem ipsum dolor sit amet"
          }
        },
        "example": {
          "category": "sell",
          "title": "Sell a cat",
          "name": "Tom",
          "birthDate": "2023-03-21T13:15:30.063Z",
          "breed": "British Shorthair",
          "sex": "male",
          "location": "Brovary, Kyiv",
          "price": 500,
          "photoURL": "https://res.cloudinary.com/dpjmbj5vx/image/upload/v1679256350/noticeImages/licensed-image.jpg",
          "comments": "Lorem ipsum dolor sit amet, consecteturLorem ipsum dolor sit amet"
        }
      },

      "NoticesListschema": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Pet's id",
              "example": "63f72058bbba3338d0016353"
            },
            "category": {
              "type": "string",
              "description": "Pet's category can be sell, lost-found, for-free",
              "example": "sell"
            },
            "title": {
              "type": "string",
              "description": "Notices title",
              "example": "Sell a cat"
            },
            "name": {
              "type": "string",
              "description": "Pet's name",
              "example": "Tom"
            },
            "birthDate": {
              "type": "string",
              "format": "dateTime",
              "description": "Pet's birthday",
              "example": "2023-03-21T13:15:30.063Z"
            },
            "breed": {
              "type": "string",
              "description": "Pet's breed",
              "example": "British Shorthair"
            },
            "sex": {
              "type": "string",
              "description": "Pet's sex must be male or female",
              "example": "male"
            },
            "location": {
              "type": "string",
              "description": "Pet's location",
              "example": "Brovary, Kyiv"
            },
            "price": {
              "type": "integer",
              "description": "Pet's price",
              "example": "500"
            },
            "photoURL": {
              "type": "string",
              "description": "Pet's photo",
              "example": "http://res.cloudinary.com/dtk7nhyzp/image/upload/h_150,w_100/nils%20cat.png"
            },
            "comments": {
              "type": "string",
              "description": "Some text about Pet",
              "example": "Lorem ipsum dolor sit amet, consecteturLorem ipsum dolor sit amet"
            },
            "owner": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "User's id",
                  "example": "63f3306945cc47c53a8fd33d"
                },
                "email": {
                  "type": "string",
                  "description": "User's email",
                  "format": "email"
                },
                "name": {
                  "type": "string",
                  "description": "User's name",
                  "example": "User Test"
                }
              }
            }
          }
        },
        "example": {
          "totalItems": "integer",
          "results": [
            {
              "_id": "63f330d345cc47c53a8fd34e",
              "category": "sell",
              "title": "Sell a cat",
              "name": "Tom",
              "birthDate": "2022-11-30T22:00:00.000Z",
              "breed": "British Shorthair",
              "sex": "male",
              "location": "Brovary, Kyiv",
              "price": 500,
              "image": "http://res.cloudinary.com/dtk7nhyzp/image/upload/h_150,w_100/nils%20cat.png",
              "comments": "Lorem ipsum dolor sit amet, consecteturLorem ipsum dolor sit amet",
              "owner": {
                "_id": "63f3306945cc47c53a8fd33d",
                "email": "testuser@gmail.com",
                "name": "User Test"
              }
            },
            {
              "_id": "63f330d345cc47c53a8fd34e",
              "category": "sell",
              "title": "Sell a cute citty",
              "name": "Toma",
              "birthDate": "2021-10-30T22:00:00.000Z",
              "breed": "British Shorthair",
              "sex": "female",
              "location": "Brovary, Kyiv",
              "price": 500,
              "image": "http://res.cloudinary.com/dtk7nhyzp/image/upload/h_150,w_100/nils%20cat.png",
              "comments": "Lorem ipsum dolor sit amet, consecteturLorem ipsum dolor sit amet",
              "owner": {
                "_id": "63f3306945cc47c53a8fd33d",
                "email": "testuser@gmail.com",
                "name": "User Test"
              }
            }
          ]
        }
      },

      "NoticeSchema": {
        "type": "object",
        "required": [
          "category",
          "title",
          "name",
          "birthDate",
          "breed",
          "sex",
          "comments"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Notice id",
            "example": "63f72058bbba3338d0016353"
          },
          "category": {
            "type": "string",
            "description": "Pet's category can be sell, lost-found, for-free",
            "example": "sell"
          },
          "title": {
            "type": "string",
            "description": "Notices title",
            "example": "Sell a cat"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Tom"
          },
          "birthDate": {
            "type": "string",
            "format": "dateTime",
            "description": "Pet's birthday",
            "example": "2023-03-21T13:15:30.063Z"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "British Shorthair"
          },
          "sex": {
            "type": "string",
            "description": "Pet's sex must be male or female",
            "example": "male"
          },
          "location": {
            "type": "string",
            "description": "Pet's location",
            "example": "Brovary, Kyiv"
          },
          "price": {
            "type": "integer",
            "description": "Pet's price",
            "example": "500"
          },
          "photoURL": {
            "type": "string",
            "description": "Pet's photo",
            "photoURL": "https://res.cloudinary.com/dpjmbj5vx/image/upload/v1679256350/noticeImages/licensed-image.jpg"
          },
          "comments": {
            "type": "string",
            "description": "Some text about Pet",
            "comments": "Lorem ipsum dolor sit amet, consecteturLorem ipsum dolor sit amet"
          },
          "owner": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "User's id",
                "example": "63f3306945cc47c53a8fd33d"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "usertest@gmail.com"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "User Test"
              }
            }
          }
        },
        "example": {
          "_id": "63f330d345cc47c53a8fd34e",
          "category": "sell",
          "title": "Sell a cat",
          "name": "Tom",
          "birthDate": "2022-11-30T22:00:00.000Z",
          "breed": "British Shorthair",
          "sex": "male",
          "location": "Brovary, Kyiv",
          "price": 500,
          "photoURL": "https://res.cloudinary.com/dpjmbj5vx/image/upload/v1679256350/noticeImages/licensed-image.jpg",
          "comments": "Lorem ipsum dolor sit amet, consecteturLorem ipsum dolor sit amet",
          "owner": {
            "_id": "63f3306945cc47c53a8fd33d",
            "email": "usertest@gmail.com",
            "name": "User Test"
          }
        }
      },

      "FavoriteNoticeSchema": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Pet's id",
            "example": "63f72058bbba3338d0016353"
          },
          "category": {
            "type": "string",
            "description": "Pet's category can be sell, lost-found, for-free",
            "example": "sell"
          },
          "title": {
            "type": "string",
            "description": "Notices title",
            "example": "Sell a cat"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Tom"
          },
          "birthDate": {
            "type": "string",
            "format": "dateTime",
            "description": "Pet's birthday",
            "example": "2023-03-21T13:15:30.063Z"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "British Shorthair"
          },
          "sex": {
            "type": "string",
            "description": "Pet's sex must be male or female",
            "example": "male"
          },
          "location": {
            "type": "string",
            "description": "Pet's location",
            "example": "Brovary, Kyiv"
          },
          "price": {
            "type": "integer",
            "description": "Pet's price",
            "example": "500"
          },
          "photoURL": {
            "type": "string",
            "description": "Pet's photo",
            "photoURL": "https://res.cloudinary.com/dpjmbj5vx/image/upload/v1679256350/noticeImages/licensed-image.jpg"
          },
          "comments": {
            "type": "string",
            "description": "Some text about Pet",
            "comments": "Lorem ipsum dolor sit amet, consecteturLorem ipsum dolor sit amet"
          },
          "owner": {
            "type": "string",
            "description": "Owner's id",
            "owner": "63f3306945cc47c53a8fd33d"
          },
          "createdAt": {
            "type": "string",
            "description": "Date of creation notice",
            "format": "dateTime"
          },
          "updatedAt": {
            "type": "string",
            "description": "Date of update notice",
            "format": "dateTime"
          }
        },
        "example": {
          "_id": "63f330d345cc47c53a8fd34e",
          "category": "sell",
          "title": "Sell a cat",
          "name": "Tom",
          "birthDate": "2022-11-30T22:00:00.000Z",
          "breed": "British Shorthair",
          "sex": "male",
          "location": "Brovary, Kyiv",
          "price": 500,
          "photoURL": "https://res.cloudinary.com/dpjmbj5vx/image/upload/v1679256350/noticeImages/licensed-image.jpg",
          "comments": "Lorem ipsum dolor sit amet, consecteturLorem ipsum dolor sit amet",
          "owner": "63f3306945cc47c53a8fd33d",
          "createdAt": "2023-03-21T13:15:30.063Z",
          "updatedAt": "2023-03-21T13:15:30.063Z"
        }
      },

      "FavoriteNoticeListSchema": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Pet's id",
              "example": "63f72058bbba3338d0016353"
            },
            "category": {
              "type": "string",
              "description": "Pet's category can be sell, lost-found, for-free",
              "example": "sell"
            },
            "title": {
              "type": "string",
              "description": "Notices title",
              "example": "Sell a cat"
            },
            "name": {
              "type": "string",
              "description": "Pet's name",
              "example": "Tom"
            },
            "birthDate": {
              "type": "string",
              "format": "dateTime",
              "description": "Pet's birthday",
              "example": "2023-03-21T13:15:30.063Z"
            },
            "breed": {
              "type": "string",
              "description": "Pet's breed",
              "example": "British Shorthair"
            },
            "sex": {
              "type": "string",
              "description": "Pet's sex must be male or female",
              "example": "male"
            },
            "location": {
              "type": "string",
              "description": "Pet's location",
              "example": "Brovary, Kyiv"
            },
            "price": {
              "type": "integer",
              "description": "Pet's price",
              "example": "500"
            },
            "photoURL": {
              "type": "string",
              "description": "Pet's photo",
              "photoURL": "https://res.cloudinary.com/dpjmbj5vx/image/upload/v1679256350/noticeImages/licensed-image.jpg"
            },
            "comments": {
              "type": "string",
              "description": "Some text about Pet",
              "comments": "Lorem ipsum dolor sit amet, consecteturLorem ipsum dolor sit amet"
            },
            "owner": {
              "type": "string",
              "description": "Owner's id",
              "owner": "63f3306945cc47c53a8fd33d"
            }
          }
        },
        "example": {
          "results": [
            {
              "_id": "63f330d345cc47c53a8fd34e",
              "category": "sell",
              "title": "Sell a cat",
              "name": "Tom",
              "birthDate": "2022-11-30T22:00:00.000Z",
              "breed": "British Shorthair",
              "sex": "male",
              "location": "Brovary, Kyiv",
              "price": 500,
              "photoURL": "https://res.cloudinary.com/dpjmbj5vx/image/upload/v1679256350/noticeImages/licensed-image.jpg",
              "comments": "Lorem ipsum dolor sit amet, consecteturLorem ipsum dolor sit amet",
              "owner": "63f3306945cc47c53a8fd33d"
            },
            {
              "_id": "63f330d345cc47c53a8fd34e",
              "category": "sell",
              "title": "Sell a cute citty",
              "name": "Toma",
              "birthDate": "2022-11-30T22:00:00.000Z",
              "breed": "Home",
              "sex": "female",
              "location": "Brovary, Kyiv",
              "price": 500,
              "photoURL": "https://res.cloudinary.com/dpjmbj5vx/image/upload/v1679256350/noticeImages/licensed-image.jpg",
              "comments": "Lorem ipsum dolor sit amet, consecteturLorem ipsum dolor sit amet",
              "owner": "63f3306945cc47c53a8fd33d"
            }
          ]
        }
      },

      "PetRequestSchema": {
        "type": "object",
        "required": ["name", "breed", "photoURL", "birthDate", "comments"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Tom"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "British Shorthair"
          },
          "photoURL": {
            "type": "string",
            "description": "Pet's photo",
            "format": "binary"
          },

          "birthDate": {
            "type": "string",
            "format": "dateTime",
            "description": "Pet's birthday",
            "example": "2023-03-21T13:15:30.063Z"
          },
          "comments": {
            "type": "string",
            "description": "Some text about Pet",
            "example": "Lorem ipsum dolor sit amet, consecteturLorem ipsum dolor sit amet"
          }
        },
        "example": {
          "_id": "63f330d345cc47c53a8fd34e",
          "name": "Tom",
          "breed": "British Shorthair",
          "photoURL": "https://res.cloudinary.com/dpjmbj5vx/image/upload/v1679256350/noticeImages/licensed-image.jpg",
          "birthDate": "2023-03-21T13:15:30.063Z",
          "comments": "Lorem ipsum dolor sit amet, consecteturLorem ipsum dolor sit amet",
          "owner": {
            "_id": "63f3306945cc47c53a8fd33d",
            "email": "usertest@gmail.com",
            "name": "User Test"
          }
        }
      },

      "PetResponseSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Tom"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "British Shorthair"
          },
          "photoURL": {
            "type": "string",
            "description": "Pet's photo",
            "format": "binary"
          },

          "birthDate": {
            "type": "string",
            "format": "dateTime",
            "description": "Pet's birthday",
            "example": "2023-03-21T13:15:30.063Z"
          },
          "comments": {
            "type": "string",
            "description": "Some text about Pet",
            "example": "Lorem ipsum dolor sit amet, consecteturLorem ipsum dolor sit amet"
          },
          "owner": {
            "type": "string",
            "description": "Owner's id",
            "owner": "63f3306945cc47c53a8fd33d"
          },
          "_id": {
            "type": "string",
            "description": "Pet's id",
            "example": "63f72058bbba3338d0016353"
          },
          "createdAt": {
            "type": "string",
            "description": "Date of creation notice",
            "format": "dateTime"
          },
          "updatedAt": {
            "type": "string",
            "description": "Date of update notice",
            "format": "dateTime"
          }
        },
        "example": {
          "name": "Tom",
          "breed": "British Shorthair",
          "photoURL": "https://res.cloudinary.com/dpjmbj5vx/image/upload/v1679256350/noticeImages/licensed-image.jpg",
          "birthDate": "2023-03-21T13:15:30.063Z",
          "comments": "Lorem ipsum dolor sit amet, consecteturLorem ipsum dolor sit amet",
          "owner": "63f3306945cc47c53a8fd33d",
          "_id": "63f330d345cc47c53a8fd34e",
          "createdAt": "2023-03-21T13:15:30.063Z",
          "updatedAt": "2023-03-21T13:15:30.063Z"
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
